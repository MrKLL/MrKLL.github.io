<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Laravel快速入门(一)</title>
      <link href="/2019/07/12/laravel-kuai-su-ru-men-yi/"/>
      <url>/2019/07/12/laravel-kuai-su-ru-men-yi/</url>
      
        <content type="html"><![CDATA[<p>Laravel是一套简洁、优雅的PHP WEB开发框架（目前最流行的PHP框架，基于symfony开发）具有富于表达性且简洁的语法，Laravel是易于理解且强大的，它提供了强大的工具用于开发大型、健壮的应用，如：验证、路由、会话技术、缓存、数据迁移、单元测试等等常用工具和功能。<br><a href="https://laravel.com/" target="_blank" rel="noopener">Laravel官网</a><br><a href="http://laravelacademy.org/" target="_blank" rel="noopener">Laravel学院</a><br><a href="http://www.golaravel.com/" target="_blank" rel="noopener">Laravel中文文档</a><br><a href="https://laravel-china.org/" target="_blank" rel="noopener">Laravel中国</a><br><a href="https://laravel-china.org/topics/2530/the-highest-amount-of-downloads-of-the-100-laravel-extensions-recommended" target="_blank" rel="noopener">Laravel常见的类库(top100)</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架 </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建LAMP环境</title>
      <link href="/2018/04/12/kuai-su-da-jian-lamp-huan-jing/"/>
      <url>/2018/04/12/kuai-su-da-jian-lamp-huan-jing/</url>
      
        <content type="html"><![CDATA[<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li>一台装有Centos7的服务器<h4 id="安装PHP7"><a href="#安装PHP7" class="headerlink" title="安装PHP7"></a>安装PHP7</h4><pre><code>1.更换yum源rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm2.安装PHP7yum install -y php70w3.安装PHP的常用扩展 yum install -y php70w-pecl-redis.x86_64 php70w-mysql.x86_64  php70w-mcrypt.x86_64 php70w-pdo.x86_64 php70w-soap.x86_64 php70w-devel.x86_64 php70w-bcmath.x86_64 php70w-gd.x86_64 php70w-opcache.x86_64</code></pre><h4 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h4><pre><code>yum install -y httpd</code></pre><h4 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h4><pre><code>wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpmrpm -ivh mysql-community-release-el7-5.noarch.rpmyum install -y mysql-server1.启动mysqlsystemctl restart mysqld.service2.登录数据库，修改密码mysql -urootSET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; = PASSWORD(&#39;你的密码&#39;);</code></pre><h4 id="设置开机自动启动"><a href="#设置开机自动启动" class="headerlink" title="设置开机自动启动"></a>设置开机自动启动</h4><pre><code>systemctl enable  httpd.service</code></pre><h4 id="启动-Apache"><a href="#启动-Apache" class="headerlink" title="启动 Apache"></a>启动 Apache</h4><pre><code>systemctl start  httpd.service</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOs </tag>
            
            <tag> Mysql </tag>
            
            <tag> Apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速搭建LNMP环境</title>
      <link href="/2018/04/12/kuai-su-da-jian-lnmp-huan-jing/"/>
      <url>/2018/04/12/kuai-su-da-jian-lnmp-huan-jing/</url>
      
        <content type="html"><![CDATA[<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li>一台装有Centos7的服务器<h4 id="安装PHP7"><a href="#安装PHP7" class="headerlink" title="安装PHP7"></a>安装PHP7</h4><pre><code>1.更换yum源rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm2.安装PHP7yum install -y php70w3.安装PHP的常用扩展 yum install -y php70w-pecl-redis.x86_64 php70w-mysql.x86_64 php70w-fpm.x86_64 php70w-mcrypt.x86_64 php70w-pdo.x86_64 php70w-soap.x86_64 php70w-devel.x86_64 php70w-bcmath.x86_64 php70w-gd.x86_64 php70w-opcache.x86_64</code></pre><h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><pre><code>yum install -y nginx</code></pre><h4 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h4><pre><code>wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpmrpm -ivh mysql-community-release-el7-5.noarch.rpmyum install -y mysql-server1.启动mysqlsystemctl restart mysqld.service2.登录数据库，修改密码mysql -urootSET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; = PASSWORD(&#39;你的密码&#39;);</code></pre><h4 id="设置开机自动启动"><a href="#设置开机自动启动" class="headerlink" title="设置开机自动启动"></a>设置开机自动启动</h4><pre><code>systemctl enable  nginx.servicesystemctl enable  php-fpm.service</code></pre><h4 id="启动-Nginx-PHP"><a href="#启动-Nginx-PHP" class="headerlink" title="启动 Nginx,PHP"></a>启动 Nginx,PHP</h4><pre><code>systemctl start  nginx.servicesystemctl start  php-fpm.service</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOs </tag>
            
            <tag> Nginx </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用指令</title>
      <link href="/2017/10/20/git-chang-yong-zhi-ling/"/>
      <url>/2017/10/20/git-chang-yong-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h3 id="Git-全局设置"><a href="#Git-全局设置" class="headerlink" title="Git 全局设置"></a>Git 全局设置</h3><pre><code>git config --global user.name &quot;your name&quot;git config --global user.email &quot;your Email&quot;</code></pre><h3 id="克隆线上git仓库"><a href="#克隆线上git仓库" class="headerlink" title="克隆线上git仓库"></a>克隆线上git仓库</h3><pre><code>git clone 项目git仓库地址</code></pre><h3 id="本地新文件夹与线上git仓库关联"><a href="#本地新文件夹与线上git仓库关联" class="headerlink" title="本地新文件夹与线上git仓库关联"></a>本地新文件夹与线上git仓库关联</h3><pre><code>cd your dirgit initgit remote add origin 项目git仓库地址git add .git commit -m &quot;Initial commit&quot;git push -u origin master</code></pre><h3 id="已存在的-Git-版本库"><a href="#已存在的-Git-版本库" class="headerlink" title="已存在的 Git 版本库"></a>已存在的 Git 版本库</h3><pre><code>cd your git dirgit remote rename origin old-origingit remote add origin 项目git仓库地址git push -u origin --allgit push -u origin --tags关联本地与远程分支git branch --set-upstream-to origin/devtest devtest</code></pre><h3 id="git初始化"><a href="#git初始化" class="headerlink" title="git初始化"></a>git初始化</h3><pre><code>git init</code></pre><h3 id="git下载远程git仓库代码："><a href="#git下载远程git仓库代码：" class="headerlink" title="git下载远程git仓库代码："></a>git下载远程git仓库代码：</h3><pre><code>git clone 远程git仓库地址</code></pre><h3 id="git查看当前分支修改内容状态："><a href="#git查看当前分支修改内容状态：" class="headerlink" title="git查看当前分支修改内容状态："></a>git查看当前分支修改内容状态：</h3><pre><code>git status</code></pre><h3 id="git查看分支："><a href="#git查看分支：" class="headerlink" title="git查看分支："></a>git查看分支：</h3><pre><code>查看所有分支列表（本地 和 远程）git branch -a查看本地分支，*标记的代表当前分支git branch3 查看远程版本库分支git branch -r</code></pre><h3 id="git重命名本地-远程分支："><a href="#git重命名本地-远程分支：" class="headerlink" title="git重命名本地/远程分支："></a>git重命名本地/远程分支：</h3><pre><code>重命名本地分支（不管是否在当前分支，都可以修改）git branch -m &lt;old_branch&gt; &lt;new_branch&gt;重命名远程分支先修改本地分支名git branch -m &lt;old_branch&gt; &lt;new_branch&gt;再删除要修改的远程分支名git push origin --delete &lt;old_branch&gt;最后将改名后的分支push到远程git push origin &lt;new_branch&gt;</code></pre><h3 id="git更新内容放入暂存区："><a href="#git更新内容放入暂存区：" class="headerlink" title="git更新内容放入暂存区："></a>git更新内容放入暂存区：</h3><pre><code>单个文件放入暂存区git add &lt;filename&gt;所有文件放入暂存区git add .</code></pre><h3 id="git提交暂存区的内容："><a href="#git提交暂存区的内容：" class="headerlink" title="git提交暂存区的内容："></a>git提交暂存区的内容：</h3><pre><code>git commit -m&quot; 对本次提交的描述 &quot;</code></pre><h3 id="git拉取远程代码："><a href="#git拉取远程代码：" class="headerlink" title="git拉取远程代码："></a>git拉取远程代码：</h3><pre><code>git pull origin &lt;origin_branch&gt;拉取远程所有分支代码git pull</code></pre><h3 id="git推送到远程代码："><a href="#git推送到远程代码：" class="headerlink" title="git推送到远程代码："></a>git推送到远程代码：</h3><pre><code>git push origin &lt;origin_branch&gt;</code></pre><h3 id="git切换分支（commit之后方可切换分支）"><a href="#git切换分支（commit之后方可切换分支）" class="headerlink" title="git切换分支（commit之后方可切换分支）"></a>git切换分支（commit之后方可切换分支）</h3><pre><code>切换已经存在的分支git checkout &lt;branch_name&gt;切换不存在的分支（此命令会新建新分支并切换到新分支）git checkout -b &lt;new_branch&gt;</code></pre><h3 id="git放弃修改："><a href="#git放弃修改：" class="headerlink" title="git放弃修改："></a>git放弃修改：</h3><pre><code>放弃单个文件的修改，即删除修改（注意：该文件没有暂存或者提交改动，已经暂存或者提交改动的不受影响）git checkout -- &lt;filename&gt;放弃当前目录下的修改，即删除修改git checkout .</code></pre><h3 id="git本地分支推送远程："><a href="#git本地分支推送远程：" class="headerlink" title="git本地分支推送远程："></a>git本地分支推送远程：</h3><pre><code>拉取远程最新代码git pull新建本地分支git checkout -b 本地分支名推送到远程分支上git push origin 本地分支名：远程分支名</code></pre><h3 id="git删除本地分支："><a href="#git删除本地分支：" class="headerlink" title="git删除本地分支："></a>git删除本地分支：</h3><pre><code>删除本地分支 （需要先checkuout到本地别的分支上，再进行删除）git branch -d &lt;branch_name&gt;如果有未merge的提交，那么删除分支失败 ，此时可以进行强制删除分支git branch -D &lt;branch_name&gt;</code></pre><h3 id="git删除远程分支："><a href="#git删除远程分支：" class="headerlink" title="git删除远程分支："></a>git删除远程分支：</h3><pre><code>方法一：git push origin --delete &lt;origin_branch&gt;方法二：git push origin :&lt;origin_branch&gt;</code></pre><h3 id="git查看日志（日志即分支的历史合并）："><a href="#git查看日志（日志即分支的历史合并）：" class="headerlink" title="git查看日志（日志即分支的历史合并）："></a>git查看日志（日志即分支的历史合并）：</h3><pre><code>会输出所有的日志（commit id，commit author，commit date，commit name），如果日志特别多的话，在git bash中，按向下键来查看更多，按q键退出查看日志git log--oneline 参数可以将每条日志的输出为一行（commit id 前7位，commit name），如果日志比较多的话，用这个参数能够使结果看起来比较醒目git log --oneline-[length]  参数用于指定显示多少条日志（例：git log -1，显示一条）git log -[length]--name-status  参数会带出每次提交对应的文件改动git log --name-status可以筛选出 yourname 用户提交的所有日志git log --author yourname参数用来指定跳过前几条日志（git log --skip=1）git log --skip=[skip]-p 参数输出的信息会更多，用来显示提交的改动记录，相当于多次使用 git show [commit_id] 的结果；（git log -1 -p：显示一条）git log -p</code></pre><h3 id="git撤销提交："><a href="#git撤销提交：" class="headerlink" title="git撤销提交："></a>git撤销提交：</h3><pre><code>退回到某个版本，只回退了commit的信息（退回到暂存区 commit，还可以继续修改提交）git reset --soft &lt;commit id&gt;撤销最近一次提交git revert HEADreset 撤销  彻底回退到某个版本（撤销的内容（即被撤销的commit）会被冲掉）git reset --hard&lt;commit id&gt;revert 撤销 （比如：fa042ce57ebbe5bb9c8db709f719cec2c58ee7ff）撤销指定的版本，撤销也会作为一次提交进行保存git revert commit注意：reset 和 revert 的区别：revert 是用一次新的 commit 来回滚之前的 commit，reset 是直接删除指定的 commit</code></pre><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">史上最浅显易懂的Git教程</a></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版本控制工具 </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>史上最全的Webstorm快捷键及技巧</title>
      <link href="/2017/10/17/shi-shang-zui-quan-de-webstorm-kuai-jie-jian-ji-ji-qiao/"/>
      <url>/2017/10/17/shi-shang-zui-quan-de-webstorm-kuai-jie-jian-ji-ji-qiao/</url>
      
        <content type="html"><![CDATA[<p>Webstorm是一款前端开发神器，此文介绍 Webstorm的快捷键和技巧分享。所谓工欲善其事，必先利其器嘛，想着如果要提高开发效率，那掌握一些常用的快捷键应该是少不了的，所以把Webstorm快捷键及技巧分享给大家。持续更新中</p><h3 id="快捷键大全"><a href="#快捷键大全" class="headerlink" title="快捷键大全"></a>快捷键大全</h3><h4 id="编辑类"><a href="#编辑类" class="headerlink" title="编辑类"></a>编辑类</h4><p>【Ctrl + Space 】基本代码完成 （任何类、 方法或变量名称）<br>【Alt + Enter】 展示意图动作和快速修复<br>【Ctrl + P】显示调用方法内参数信息<br>【Ctrl + Q】 快速记录查找<br>【Ctrl + mouse】放在代码上面-显示简短的代码信息<br>【Ctrl + F1】在插入符号显示错误或警告的说明<br>【Alt + Insert】生成代码<br>【Ctrl + Alt + T】快速生成（if..else, try..catch, for, etc.）等<br>【Ctrl + J】插入Live模板<br>【Ctrl + / 】行注释与取消行注释<br>【Ctrl + Shift + / 】块注释与取消块注释<br>【Ctrl + W 】增加选择中代码块<br>【Ctrl + Shift + W 】减少当前所选内容代码块<br>【Alt + Q 】上下文信息<br>【Ctrl + Alt + L 】格式化代码<br>【Ctrl + Alt + I 】自动缩进的行数<br>【Tab / Shift + Tab 】缩进/取消缩进选定的行<br>【Ctrl + X , Shift + Delete】 剪切到剪贴板的当前行或者所选代码块<br>【Ctrl + C】Ctrl + 插入复制当前行或者所选代码块到剪贴板<br>【Ctrl + V】Shift + 从剪贴板插入粘贴<br>【Ctrl + Shift + V 】最近缓冲区粘贴<br>【Ctrl + D】复制当前行或者所选代码块<br>【Ctrl + Y】删除行<br>【Ctrl + Shift + J 】加入行<br>【Ctrl + enter 】拆分行<br>【shift + Enter 】 重新开始一行（无论光标在哪个位置）<br>【Ctrl + Shift + U 】切换选中词或所选代码块的大小写<br>【Ctrl + Shift +]】选中直到代码块的开始<br>【Ctrl + Shift +[】选择直到代码块的结束<br>【Ctrl + Delete】 删除光标右侧的词<br>【Ctrl + backspace】 删除光标左侧的词<br>【Ctrl + NumPad+】展开代码块<br>【Ctrl + NumPad-】折叠代码块<br>【Ctrl + Shift + NumPad+】展开所有代码块<br>【Ctrl + Shift + NumPad-】折叠所有代码块<br>【Ctrl + F4 】关闭当前标签页</p><h4 id="同时编辑多行"><a href="#同时编辑多行" class="headerlink" title="同时编辑多行"></a>同时编辑多行</h4><p>【Alt + Click】 同时选中多行，同时编辑<br>【Shift + Ctrl + Alt + J】选择所有当前选中的词<br>【Alt + J】选择下一个相同的词<br>【Alt + Shift + J】取消所有选中的词<br>【Esc】取消选择所有选中的词或插入符号</p><h4 id="运行类"><a href="#运行类" class="headerlink" title="运行类"></a>运行类</h4><p>【Alt + Shift + F10/F9】 选择配置和运行/调试<br>【Shift + F10/F9】 运行/调试<br>【Ctrl + Shift + F10/F9】 运行/调试上下文配置从编辑器<br>【Alt + Shift + R】 重新运行测试</p><h4 id="调试类"><a href="#调试类" class="headerlink" title="调试类"></a>调试类</h4><p>【F8】不进入函数<br>【F7】 单步执行<br>【Shift + F7】 只能单步执行<br>【Shift + F8】跳出<br>【Alt + F9】 运行到光标处<br>【Alt + F8】 计算表达式的值<br>【F9】 重新开始<br>【Ctrl + f8】 切换断点<br>【Ctrl + Shift + F8】 查看断点</p><h4 id="导航类"><a href="#导航类" class="headerlink" title="导航类"></a>导航类</h4><p>【Ctrl + N】跳转到指定类<br>【Ctrl + Shift + N】 通过文件名快速查找工程内的文件<br>【Ctrl + Alt + Shift + N】 通过一个字符查找函数位置<br>【Alt + Right】进入下一个编辑器选项<br>【Alt + Left】进入上一个编辑器选项<br>【f12】 进入上一个工具窗口<br>【esc】 从工具窗口进入编辑器<br>【Shift + Esc】 隐藏活动窗口<br>【Ctrl + Shift + F4】 关闭活动运行/消息/查找/选项卡<br>【Ctrl + G】 跳转到指定行<br>【Ctrl + E】 弹出最近打开的文件列表<br>【Ctrl + Alt + Left】导航前进<br>【Ctrl + Alt + Right】导航回退<br>【Ctrl + Shift +Backspace】定位到最近编辑窗口<br>【Alt + F1】查找当前选中的代码或文件在其他界面模块的位置<br>【Ctrl + B/Click】跳转到定义处<br>【Ctrl + 单击】转到声明<br>【Ctrl + Alt + B 】跳转方法实现处<br>【Ctrl + Shift + I】打开定义快速查找<br>【Ctrl + Shift + B 】跳转方法定义处<br>【Ctrl + U 】转到超级方法/超级类<br>【Alt + Up/Down】在方法间快速移动定位<br>【Ctrl +]/[】移动到代码块结束/启动<br>【Ctrl + f12】弹出文件结构<br>【Ctrl + H 】类型层次结构<br>【Ctrl + Alt + H】 调用层次结构<br>【F2/Shift + F2】跳转到后一个/前一个错误，在出错的语句之间进行跳转。<br>【F4/Ctrl + Enter】 编辑源代码/查看源代码<br>【Alt + home】 显示导航栏<br>【F11】切换标记<br>【Ctrl + F11】 采用记忆切换标记<br>【Ctrl + #[0-9]】跳转到带编号的标记<br>【Shift + F11 显示书签</p><h4 id="VCS版本控制"><a href="#VCS版本控制" class="headerlink" title="VCS版本控制"></a>VCS版本控制</h4><p>【Alt + 反引号 (‘)】 ‘VCS’ 快速弹出<br>【Ctrl + K】提交项目到VCS<br>【Ctrl + T】 从VCS更新项目<br>【Alt + Shift + C】查看最近的更改</p><h4 id="搜索-替换"><a href="#搜索-替换" class="headerlink" title="搜索/替换"></a>搜索/替换</h4><p>【Ctrl + F】 查找<br>【F3】 查找下一个<br>【Shift + F3】 查找上一个<br>【Ctrl + R】替换<br>【Ctrl + Shift + F】 在路径中找到<br>【Ctrl + Shift + R】 替换路径中的查找</p><h4 id="搜索类"><a href="#搜索类" class="headerlink" title="搜索类"></a>搜索类</h4><p>【Alt + f7】查找实例<br>【Ctrl + f7】在文件中查找实例<br>【Ctrl + Shift + f7】 在文件中高亮实例<br>【Ctrl + Alt + F7】显示实例</p><h4 id="重构类"><a href="#重构类" class="headerlink" title="重构类"></a>重构类</h4><p>【F5】拷贝当前文件<br>【F6】移动当前文件<br>【Alt + delete】 安全删除<br>【Shift + F6】 重命名<br>【Ctrl + Alt + N】嵌入变量<br>【Ctrl + Alt + M】提取函数<br>【Ctrl + Alt + V】引入变量<br>【Ctrl + Alt + C】引入常量<br>【Ctrl + Alt + P】引入参数<br>【Ctrl + F6】改变方法名</p><h4 id="常规类"><a href="#常规类" class="headerlink" title="常规类"></a>常规类</h4><p>【Ctrl + Shift +a】 查找当前<br>【双击shift】查找所有的（包括文件、命令等）<br>【Alt + #[0-9]】 打开相应的工具窗口<br>【Ctrl + Shift + f12】 键切换最大化编辑器<br>【Alt + Shift + F】 将添加到收藏夹<br>【Alt + Shift + I】 检查当前文件与当前配置文件<br>【Ctrl + 反引号 (‘)】快速切换当前计划<br>【Ctrl + Alt + S】 打开设置<br>【Ctrl + Tab】 切换选项卡和工具窗口</p><h4 id="常用插件推荐"><a href="#常用插件推荐" class="headerlink" title="常用插件推荐"></a>常用插件推荐</h4><p>Key Promoter【学习快捷键神器】<br>鼠标完成某项操作时，会提示相应的快捷键。</p><p>activate-power-mode【装*神器】<br>Atom上的神器，安装之后可以在 window -&gt; activate-power-mode中关闭震动以及开启彩色模式。</p><h5 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h5><p>支持Markdown语法</p><h5 id="CodeGlance"><a href="#CodeGlance" class="headerlink" title="CodeGlance"></a>CodeGlance</h5><p>之前用过Sublime编辑器同学，强烈推荐这个，这个插件可以让 webstorm 也具有右侧展示当前文件中代码的缩略图。</p><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><p>webstorm可以像sublime一样多行选择，比如在sublime中全选一个单词然后使用cmd+d，就可以往下选择一样的单词，然后进入多行模式吗？当然可以!</p><ul><li><p>逐个选中多个相同的词<br>sublime：Ctrl + D (Ctrl + K可以跳过一个)<br>webstrom：Ctrl + K ( Ctrl + Shift + K 可以回退一个)</p></li><li><p>同时选中所有相同的词<br>sublime：Alt + F3<br>webstrom：Ctrl + Shift + Alt + K</p></li><li><p>单击左键选择多行<br>sublime：按住Ctrl然后单击左键<br>webstrom：按住Alt然后单击左键</p></li><li><p>拖动选择多行<br>sublime：按住Ctrl + Shift + 鼠标右键 拖动<br>webstrom：按住Alt + 鼠标右键 拖动</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码编辑器 </tag>
            
            <tag> Webstorm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
